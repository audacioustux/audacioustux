apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: &project kubeplane
  namespace: argocd
spec:
  goTemplate: true
  goTemplateOptions: ["missingkey=error"]
  generators:
    - list:
        elements:
          - metadata:
              name: mimir
            spec:
              source:
                repoURL: https://grafana.github.io/helm-charts
                chart: mimir-distributed
                targetRevision: ~5.6.0
                helm:
                  valuesObject:
                    global:
                      dnsService: "rke2-coredns-rke2-coredns"
                      extraEnv:
                        # Blocks Bucket
                        - name: BLOCKS_BUCKET_NAME
                          valueFrom:
                            configMapKeyRef:
                              name: mimir-blocks-bucket
                              key: BUCKET_NAME
                        - name: BLOCKS_BUCKET_HOST
                          valueFrom:
                            configMapKeyRef:
                              name: mimir-blocks-bucket
                              key: BUCKET_HOST
                        - name: BLOCKS_BUCKET_PORT
                          valueFrom:
                            configMapKeyRef:
                              name: mimir-blocks-bucket
                              key: BUCKET_PORT
                        - name: BLOCKS_BUCKET_ACCESS_KEY
                          valueFrom:
                            secretKeyRef:
                              name: mimir-blocks-bucket
                              key: AWS_ACCESS_KEY_ID
                        - name: BLOCKS_BUCKET_SECRET_KEY
                          valueFrom:
                            secretKeyRef:
                              name: mimir-blocks-bucket
                              key: AWS_SECRET_ACCESS_KEY
                        # Ruler Bucket
                        - name: RULER_BUCKET_NAME
                          valueFrom:
                            configMapKeyRef:
                              name: mimir-ruler-bucket
                              key: BUCKET_NAME
                        - name: RULER_BUCKET_HOST
                          valueFrom:
                            configMapKeyRef:
                              name: mimir-ruler-bucket
                              key: BUCKET_HOST
                        - name: RULER_BUCKET_PORT
                          valueFrom:
                            configMapKeyRef:
                              name: mimir-ruler-bucket
                              key: BUCKET_PORT
                        - name: RULER_BUCKET_ACCESS_KEY
                          valueFrom:
                            secretKeyRef:
                              name: mimir-ruler-bucket
                              key: AWS_ACCESS_KEY_ID
                        - name: RULER_BUCKET_SECRET_KEY
                          valueFrom:
                            secretKeyRef:
                              name: mimir-ruler-bucket
                              key: AWS_SECRET_ACCESS_KEY
                      podAnnotations:
                        bucketSecretVersion: "0"
                    metaMonitoring:
                      serviceMonitor:
                        enabled: true
                    minio:
                      enabled: false
                    mimir:
                      structuredConfig:
                        alertmanager_storage:
                          s3: &ruler_storage
                            bucket_name: ${RULER_BUCKET_NAME}
                            access_key_id: ${RULER_BUCKET_ACCESS_KEY}
                            endpoint: ${RULER_BUCKET_HOST}:${RULER_BUCKET_PORT}
                            secret_access_key: ${RULER_BUCKET_SECRET_KEY}
                            insecure: true
                        blocks_storage:
                          backend: s3
                          s3:
                            bucket_name: ${BLOCKS_BUCKET_NAME}
                            access_key_id: ${BLOCKS_BUCKET_ACCESS_KEY}
                            endpoint: ${BLOCKS_BUCKET_HOST}:${BLOCKS_BUCKET_PORT}
                            secret_access_key: ${BLOCKS_BUCKET_SECRET_KEY}
                            insecure: true
                        ruler_storage:
                          s3:
                            <<: *ruler_storage
              destination:
                namespace: monitoring
          
          - metadata:
              name: grafana
            spec:
              source:
                repoURL: https://grafana.github.io/helm-charts
                chart: grafana
                targetRevision: ~8.10.0
                helm:
                  valuesObject:
                    adminPassword: "admin"
                    ingress:
                      enabled: true
                      hosts:
                        - grafana.audacioustux.com
                      annotations:
                        cert-manager.io/cluster-issuer: letsencrypt-prod
                      tls:
                        - secretName: grafana-tls
                          hosts:
                            - grafana.audacioustux.com
                    sidecar:
                      dashboards:
                        enabled: true
                        label: grafana_dashboard
                        labelValue: "1"
                        folderAnnotation: grafana_folder
                        searchNamespace: ALL
                        provider:
                          foldersFromFilesStructure: true
                    datasources:
                      datasources.yaml:
                        apiVersion: 1
                        datasources:
                          - name: Mimir
                            type: prometheus
                            url: http://mimir-nginx.monitoring.svc.cluster.local/prometheus
                    dashboardProviders:
                      dashboardproviders.yaml:
                        apiVersion: 1
                        providers:
                          - name: default
                            orgId: 1
                            folder: ""
                            type: file
                            disableDeletion: false
                            editable: true
                            options:
                              path: /var/lib/grafana/dashboards/default
                    dashboards:
                      default:
                        argo-cd:
                          url: https://raw.githubusercontent.com/argoproj/argo-cd/master/examples/dashboard.json
                          datasource: Mimir
                    
              destination:
                namespace: monitoring
          
          - metadata:
              name: dotdc.grafana-dashboards-kubernetes
            spec:
              source:
                path: ./
                repoURL: https://github.com/dotdc/grafana-dashboards-kubernetes
                targetRevision: v2.7.1
              destination:
                namespace: monitoring

          - metadata:
              name: k8s-monitoring
            spec:
              source:
                repoURL: https://grafana.github.io/helm-charts
                chart: k8s-monitoring
                targetRevision: ~2.0.0
                helm:
                  valuesObject:
                    cluster:
                      name: kubeplane
                    destinations:
                      - name: mimir
                        type: prometheus
                        url: http://mimir-nginx.monitoring.svc.cluster.local/api/v1/push
                    clusterMetrics:
                      enabled: true
                    annotationAutodiscovery:
                      enabled: true
                      annotations:
                        scrape: prometheus.io/scrape
                        metricsPath: prometheus.io/path
                        metricsPortNumber: prometheus.io/port
                        metricsScheme: prometheus.io/scheme
                    prometheusOperatorObjects:
                      enabled: true
                      crds:
                        deploy: true
                    alloy-metrics:
                      enabled: true
              destination:
                namespace: monitoring
                
          - metadata:
              name: vertical-pod-autoscaler
            spec:
              source:
                repoURL: https://cowboysysop.github.io/charts
                chart: vertical-pod-autoscaler
                targetRevision: ~10.0.0
              destination:
                namespace: vpa
          
          - metadata:
              name: cert-manager
            spec:
              source:
                repoURL: https://charts.jetstack.io
                chart: cert-manager
                targetRevision: ~1.17.0
                helm:
                  valuesObject:
                    crds:
                      enabled: true
              destination:
                namespace: cert-manager
          
          - metadata:
              name: kyverno
            spec:
              source:
                repoURL: https://kyverno.github.io/kyverno
                chart: kyverno
                targetRevision: ~3.3.0
                helm:
                  valuesObject:
                    webhooksCleanup:
                      autoDeleteWebhooks:
                        enabled: true
              destination:
                namespace: kyverno
          
          - metadata:
              name: keda
            spec:
              source:
                repoURL: https://kedacore.github.io/charts
                chart: keda
                targetRevision: ~2.16.0
              destination:
                namespace: keda
          
          - metadata:
              name: redis-operator
            spec:
              source:
                repoURL: https://ot-container-kit.github.io/helm-charts
                chart: redis-operator
                targetRevision: ~0.19.0
              destination:
                namespace: redis
          
          - metadata:
              name: cloudnative-pg
            spec:
              source:
                repoURL: https://cloudnative-pg.github.io/charts
                chart: cloudnative-pg
                targetRevision: ~0.23.0
              destination:
                namespace: pg
          
          - metadata:
              name: scylla-operator
            spec:
              source:
                repoURL: https://scylla-operator-charts.storage.googleapis.com/stable
                chart: scylla-operator
                targetRevision: ~1.16.0
                helm:
                  valuesObject:
                    replicas: 1
                    webhookServerReplicas: 1
              destination:
                namespace: scylla-operator
          
          # - metadata:
          #     name: rancher
          #   spec:
          #     source:
          #       repoURL: https://releases.rancher.com/server-charts/stable
          #       chart: rancher
          #       targetRevision: ~2.10.0
          #     destination:
          #       namespace: cattle-system
          
          - metadata:
              name: rook-ceph
            spec:
              source:
                repoURL: https://charts.rook.io/release
                chart: rook-ceph
                targetRevision: ~1.16.0
              destination:
                namespace: rook-ceph
          
          - metadata:
              name: cilium
            spec:
              source:
                repoURL: https://helm.cilium.io
                chart: cilium
                targetRevision: ~1.17.0
                helm:
                  valuesObject:
                    prometheus:
                      enabled: true
                    dashboards:
                      enabled: true
                    hubble:
                      enabled: true
                      metrics:
                        enableOpenMetrics: true
                        enabled:
                          - dns
                          - drop
                          - tcp
                          - flow
                          - port-distribution
                          - icmp
                          - httpV2:exemplars=true;labelsContext=source_ip,source_namespace,source_workload,destination_ip,destination_namespace,destination_workload,traffic_direction
                        dashboards:
                          enabled: true
                      relay:
                        enabled: true
                        rollOutPods: true
                    kubeProxyReplacement: true
                    k8sServiceHost: localhost
                    k8sServicePort: 6443
                    ingressController:
                      default: true
                      enabled: true
                      loadbalancerMode: shared
                      enforceHttps: false
                    gatewayAPI:
                      enabled: true
                    bpf:
                      datapathMode: netkit
                      masquerade: true
                    ipv6:
                      enabled: true
                    routingMode: native
                    ipv4NativeRoutingCIDR: 10.42.0.0/16
                    ipv6NativeRoutingCIDR: 2001:cafe:42::/56
                    localRedirectPolicy: true
                    enableIPv4BIGTCP: true
                    enableIPv6BIGTCP: true
                    bandwidthManager:
                      enabled: true
                      bbr: true
                    loadBalancer:
                      mode: hybrid
                      algorithm: maglev
                      acceleration: best-effort
                    nodeIPAM:
                      enabled: true
                    defaultLBServiceIPAM: nodeipam
                    operator:
                      replicas: 1
                      rollOutPods: true
                      prometheus:
                        enabled: true
                      dashboards:
                        enabled: true
                    rollOutCiliumPods: true
                    envoy:
                      enabled: true
                      rollOutPods: true
              destination:
                namespace: kube-system
              
          - metadata:
              name: tetragon
            spec:
              source:
                repoURL: https://helm.cilium.io
                chart: tetragon
                targetRevision: ~1.3.0
              destination:
                namespace: kube-system
  
  template:
    metadata:
      name: "{{.metadata.name}}"
      annotations:
        argocd.argoproj.io/compare-options: ServerSideDiff=true,IncludeMutationWebhook=true
    spec:
      project: *project
      destination:
        server: https://kubernetes.default.svc
        namespace: *project
      syncPolicy:
        syncOptions:
          - Validate=true
          # - CreateNamespace=true
          - PruneLast=true
          - ApplyOutOfSyncOnly=true
          - ServerSideApply=true
          - FailOnSharedResource=true
          - RespectIgnoreDifferences=true
        automated:
          prune: true
          selfHeal: true
  templatePatch: |
    {{- toYaml . }}

